<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <title> SPM Independent University,Dhaka </title>
    <link rel="stylesheet" href="/headProgramReports.css">
    <script src="https://cdnjs.cloudflare.com/ajax/libs/Chart.js/2.6.0/Chart.min.js"></script>
    <link rel="stylesheet"
          href="https://maxst.icons8.com/vue-static/landings/line-awesome/line-awesome/1.3.0/css/line-awesome.min.css">

</head>

<body>
<input type="checkbox" id="nav-toggle">
<div class="sidebar">
    <div class="sidebar-brand">
        <h2><span class="lab la-accusoft"> </span> <span> SPM</span></h2>
        <p>

        </p>
    </div>
    <div class="sidebar-menu">
        <ul>
            <li>
                <a href="/Head"><span class="las la-igloo"></span>
                    <span>Student Performance Monitor</span></a>
            </li>
            <li>
                <a href="/headProgramReports" class="active"><span class="las la-clipboard-list"></span>
                    <span> Program Reports</span></a>
            </li>
            <li>
                <a href="/headMyCourse"><span class="las la-school"></span>
                    <span> My Courses</span></a>
            </li>
            <li>
                <a href="/headDataEntry"><span class="las la-database"></span>
                    <span> Data Entry</span></a>
            </li>

            <li>
                <a href="/headInstructorReport"><span class="las la-chalkboard-teacher"></span>
                    <span> Department Instructor Report</span></a>
            </li>
            <li>
                <a href="/headDownloads"><span class="las la-download"></span>
                    <span> Downloads</span></a>
            </li>
            <li>
                <a href="/headMyAccount"><span class="las la-user"></span>
                    <span> My Account </span></a>
            </li>
            <li>
                <a href="/login"><span class="las la-sign-out-alt"></span>
                    <span> Sign-Out</span></a>
            </li>
        </ul>
    </div>
</div>
<div class="main-content">
    <header>
        <h2>
            <label for="nav-toggle">
                <span class="las la-bars"></span>
            </label>
           Program Reports
        </h2>
        <div class="user-wrapper">
            <a href="https://ibb.co/ckB79jy"><img src="{{FacultyProfile}}" alt="1505967226-5-Mahady-Hasan" width="30px"
                                                  height="30px"></a>
            <div>
                <h4>{{F_fname}} {{F_lName}} </h4>
                <small> {{FacultyID}} </small>
                <small> {{H_Position}}, {{DepartmentID}}</small>
            </div>
        </div>
    </header>
    <main>

        <div class="flex-container blockwise">

            <div class="box-section">
                <div class="box-section-head"> Summary :
                    <input type="text" class="form-control" placeholder=" Course ID" />
                </div>

            </div>


        <div style="width: 1000px; height: 700px;display: inline-block;" class="chart">
            <h1>Program Comparison Progress View </h1>
            <canvas id="comp" width="800" height="500"></canvas>
        </div>


        <div style="width: 1000px; height: 700px;display: inline-block;" class="chart">
            <h1>Program-Wise Student Performance (CGPA)</h1>
            <canvas id="ProgWiseCGPA" width="1000" height="500"></canvas>
        </div>
        </div>

<!--//PROGRAM PROGRESS-->
        <div class="flex-container blockwise">

            <div class="box-section">
                <div class="box-section-head"> SEE Program-Progress
                    <input type="text" class="form-control" placeholder=" Search Student ID " />
                </div>

            </div>



        <div style="width: 1000px; height: 700px;display: inline-block;" class="chart">

            <h1>Individual Student Overall Progress </h1>
            <canvas id="radar" width="800" height="500"></canvas>
        </div>



<!--        //Student Performance-->
        <div class="flex-container blockwise">

            <div class="box-section">
                <div class="box-section-head"> SEE Program- Wise Student Performance

                </div>

            </div>

        <div style="width: 1000px; height: 700px;display: inline-block;" class="chart">
            <h1>CSE Program Student Performance</h1>
            <canvas id="CSEWiseCGPA" width="800" height="500"></canvas>
        </div>


        <div style="width: 1000px; height: 700px;display: inline-block;" class="chart">
            <h1>CSC Program Student Performance</h1>
            <canvas id="CSCWiseCGPA" width="1000" height="500"></canvas>
        </div>

        <div style="width: 1000px; height: 700px;display: inline-block;" class="chart">
            <h1>CEN Program Student Performance</h1>
            <canvas id="CENWiseCGPA" width="1000" height="500"></canvas>
        </div>


            <div class="flex-container blockwise">

                <div class="box-section">
                    <div class="box-section-head"> SEARCH COURSES
                        <input type="text" class="form-control" placeholder=" Course ID" />
                        <input type="text" class="form-control" placeholder=" Section ID" />
                        <input type="text" class="form-control" placeholder=" Student ID" />
                    </div>

                </div>


                <div style="width: 1000px; height: 700px;display: inline-block;" class="chart">
                    <h1>Student Report Of CSC303</h1>
                    <canvas id="DBMSProgressView" width="800" height="500"></canvas>
                </div>

                <div style="width: 1000px; height: 700px;display: inline-block;" class="chart">
                    <h1>Student Report Of CSE309</h1>
                    <canvas id="DiscreteProgressView" width="800" height="500"></canvas>
                </div>


                <style>
                        .content-table {
                            border-collapse: collapse;
                            margin: px 0;
                            font-size: 0.9em;
                            min-width: 400px;
                            border-radius: 2px 2px 0 0;
                            overflow: hidden;
                            box-shadow: 0 0 20px rgba(0, 0, 0, 0.15);
                        }

                        .content-table thead tr {
                            background-color: #132c33;
                            color: #ffffff;
                            text-align: left;
                            font-weight: bold;
                        }

                        .content-table th,
                        .content-table td {
                            padding: 8px 8px;
                        }

                        .content-table tbody tr {
                            border-bottom: 1px solid #dddddd;
                        }

                        .content-table tbody tr:nth-of-type(even) {
                            background-color: #f3f3f3;
                        }

                        .content-table tbody tr:last-of-type {
                            border-bottom: 2px solid #009879;
                        }

                        .content-table tbody tr.active-row {
                            font-weight: bold;
                            color: #009879;
                        }
                    </style>







    </main>
</div><script>
    radarChart("radar")
    function radarChart(ctx) {
        Chart.defaults.global.defaultFontFamily = "Oxygen";
        Chart.defaults.global.defaultFontColor = "black";
        var chart = new Chart(ctx, {
            type: 'radar',
            data: {
                labels: [
                    {{#each PLONo}}"PLO{{this}}",{{/each}}
                ],
                datasets: [{
                    label: 'Achieved PLO',
                    data: [{{#each PLOpercentage}}{{this}},{{/each}}],
                    fill: true,
                    backgroundColor: 'rgba(255, 99, 132, 0.2)',
                    borderColor: 'rgb(255, 99, 132)',
                    pointBackgroundColor: 'rgb(255, 99, 132)',
                    pointBorderColor: '#fff',
                    pointHoverBackgroundColor: '#fff',
                    pointHoverBorderColor: 'rgb(255, 99, 132)'
                },
                //     {
                //     label: 'Attempted',
                //     data: [100,100,100,100,100,100,100,100,100],
                //     fill: true,
                //     backgroundColor: 'rgba(54, 162, 235, 0.2)',
                //     borderColor: 'rgb(54, 162, 235)',
                //     pointBackgroundColor: 'rgb(54, 162, 235)',
                //     pointBorderColor: '#fff',
                //     pointHoverBackgroundColor: '#fff',
                //     pointHoverBorderColor: 'rgb(54, 162, 235)'
                // }
                ]
            },
            options: {
                elements: {
                    line: {
                        borderWidth: 3
                    }
                }
            },
        });
    }








    let semester1 = [ 'Spring',  'Summer',  'Autumn', ];
    let semesterActual = [3, 6, 6];
    let semesterAttempted = [4, 7, 8];
    chartObjects = [{
        label: 'Actual',
        backgroundColor: '#E9F0FE',
        borderColor: '#094480',
        data: semesterActual
    }, {
        label: 'Expected',
        backgroundColor: '#FEE9F3',
        borderColor: '#962323',
        data: semesterAttempted
    }];
    lineChartObject("CSEProgressView", semester1, chartObjects);
    lineChartObject("CSCProgressView", semester1, chartObjects);
    lineChartObject("CENProgressView", semester1, chartObjects);
    let CSEchartName = [{{#each CSEPLONO}}"PLO{{this}}",{{/each}}];
    let CSEchartLabel = [{{#each CSEPLOPERCENT}}"{{this}}",{{/each}}];
    barChart("CSEWiseCGPA", "Average PLO", CSEchartName, CSEchartLabel)
    let CSCchartName = [{{#each CSCPLONO}}"PLO{{this}}",{{/each}}];
    let CSCchartLabel = [{{#each CSCPLOPERCENT}}"{{this}}",{{/each}}];
    barChart("CSCWiseCGPA", "Average PLO", CSCchartName, CSCchartLabel,"","#C78CBC")
    let CENchartName = [{{#each CENPLONO}}"PLO{{this}}",{{/each}}];
    let CENchartLabel = [{{#each CENPLOPERCENT}}"{{this}}",{{/each}}];

    barChart("CENWiseCGPA", "Average PLO", CENchartName, CENchartLabel,"","#C7B78C")
    let plo1 = [{{#each students303}}"{{this}}",{{/each}}];
    datasetlist = [{
        label: 'Achieved',
        data: [{{#each achievedNOPLO303}}{{this}},{{/each}}],
        backgroundColor: '#962323'
    },
        {
            label: 'Expected',
            data: [{{attempted303}},{{attempted303}},{{attempted303}},{{attempted303}},{{attempted303}},{{attempted303}},{{attempted303}},{{attempted303}},{{attempted303}},{{attempted303}},{{attempted303}},{{attempted303}},{{attempted303}},{{attempted303}},{{attempted303}},{{attempted303}},{{attempted303}}, ],
            backgroundColor: '#094480'
        }];
    stackedChart("DBMSProgressView", plo1, datasetlist, false);
    let plo2 = [{{#each students309}}"{{this}}",{{/each}}];
    datasetlist = [{
        label: 'Achieved',
        data: [{{#each achievedNOPLO309}}{{this}},{{/each}}],
        backgroundColor: '#962323'
    },
        {
            label: 'Expected',
            data: [{{attempted309}},{{attempted309}},{{attempted309}},{{attempted309}}],
            backgroundColor: '#094480'
        }];
    stackedChart("DiscreteProgressView", plo2, datasetlist, false);
    let semester2 = [ 'Spring2021' ];
    datasetlist = [{
        label: 'CSE',
        data: [{{CSEPLOPERCENTAGE}}],
        backgroundColor: '#962323'
    },
        {
            label: 'CEN',
            data: [{{CENPLOPERCENTAGE}}],
            backgroundColor: '#78A7DC'
        },{
            label: 'CSC',
            data: [{{CSCPLOPERCENTAGE}}],
            backgroundColor: '#5BE74A'
        },{
            label: 'Program Average',
            data: [{{programAVG}}],
            backgroundColor: '#094480'
        }];
    stackedChart("comp", semester2, datasetlist, false);
    let PrchartName = ['CSE','CEN','CSC'];
    let PrchartLabel = [{{CSECGPA}}, {{CENCGPA}}, {{CSCCGPA}}];
    barChart("ProgWiseCGPA", "Program-Wise Student Performance", PrchartName, PrchartLabel,"","#EB5057")
    // let semester=['Spring','Summer', 'Autumn']
    // let PLO = [ 'PLO1', 'PLO2', 'PLO2', 'PLO4', 'PLO5', 'PLO6', 'PLO7', 'PLO8', 'PLO9', 'PLO10', 'PLO11', 'PLO12', 'PLO13'];
    // let DBMSPLOActual = [50,60,55,71,63,69,74,85,68,76,66,55,73];
    // let DisPLOActual = [55,66,75,79,43,89,65,95,78,66,65,51,78];
    // let PLOAttempted = [88,88,88,88,88,88,88,88,88,88,88,88,88];
    // chartObjects = [{
    //     label: 'DBMS Actual',
    //     backgroundColor: '#FFFFFF',
    //     borderColor: '#094480',
    //     data: DBMSPLOActual
    // },{
    //         label: 'Discrete Mathematics Actual',
    //         backgroundColor: '#FFFFFF',
    //         borderColor: '#EA4EA5',
    //         data: DisPLOActual
    //     },{
    //     label: 'Expected',
    //     backgroundColor: '#FFFFFF',
    //     borderColor: '#962323',
    //     data: PLOAttempted
    // }];
    // lineChartObject("CourseProgressView", semester, chartObjects);
    function lineChart(ctx,
                       labelName,
                       labelList,
                       dataList,
                       bdcolor = '#094480',
                       bgcolor = '#d9e2ec') {
        Chart.defaults.global.defaultFontFamily = "Oxygen";
        Chart.defaults.global.defaultFontColor = "black";
        var chart = new Chart(ctx, {
            // The type of chart we want to create
            type: 'line',
            // The data for our dataset
            data: {
                labels: labelList,
                datasets: [{
                    label: labelName,
                    backgroundColor: bgcolor,
                    borderColor: bdcolor,
                    data: dataList
                }]
            },
            // Configuration options go here
            options: {}
        });
    }
    function barChart(ctx,
                      labelName,
                      labelList,
                      dataList,
                      bdcolor = '#094480',
                      bgcolor = '#936AA2') {
        //Chart.defaults.global.defaultFontFamily = "Oxygen";
        Chart.defaults.global.defaultFontColor = "black";
        var chart = new Chart(ctx, {
            // The type of chart we want to create
            type: 'bar',
            // The data for our dataset
            data: {
                labels: labelList,
                datasets: [{
                    label: labelName,
                    backgroundColor: bgcolor,
                    borderColor: bdcolor,
                    data: dataList
                }]
            },
            // Configuration options go here
            options: {
                scales: {
                    yAxes: [{
                        ticks: {
                            beginAtZero: true
                        }
                    }]
                }
            }
        });
    }
    function lineChartObject(ctx,
                             labelList,
                             chartObjects) {
        Chart.defaults.global.defaultFontFamily = "Oxygen";
        Chart.defaults.global.defaultFontColor = "black";
        let chart = new Chart(ctx, {
            // The type of chart we want to create
            type: 'line',
            // The data for our dataset
            data: {
                labels: labelList,
                datasets: chartObjects
            },
            // Configuration options go here
            options: {
                scales: {
                    yAxes: [{
                        ticks: {
                            beginAtZero: true
                        }
                    }]
                }
            }
        });
    }
    let semester=['Spring2021']
    let semesterActualCourse = [[0, 0, 0], [0, 43, 43], [0, 46, 46], [0, 31, 31], [0, 0, 0], [0, 56, 56], [0, 0, 0], [0, 0, 0], [0, 0, 0], [0, 0, 0], [0, 0, 0], [0, 0, 0]];
    let semesterAttemptedCourse = [0, 352, 352];
    let PLO = [ 'PLO1', 'PLO2', 'PLO2', 'PLO4', 'PLO5', 'PLO6', 'PLO7', 'PLO8', 'PLO9', 'PLO10', 'PLO11', 'PLO12', 'PLO13', ];
    // let PLOActual = [50,60,55,71,63,69,74,85,68,76,66,55,73];
    // let PLOAttempted = [88,88,88,88,88,88,88,88,88,88,88,88,88];
    colorpalette = ['purple', 'brown', 'cyan', 'orange', 'yellow', '#094480', 'blue','red', 'green', 'violet', 'magenta', 'lime']
    chartObjects = []
    for (let i = 0; i < 12; i++) {
        let l = `PLO0${i + 1}`
        if (i + 1 >= 10) {
            l = `PLO${i + 1}`
        }
        chartObjects.push({
            label: l,
            backgroundColor: 'white',
            borderColor: colorpalette[i],
            data: semesterActualCourse[i]
        });
    }
    chartObjects.push({
        label: 'Overall',
        backgroundColor: 'white',
        borderColor: 'black',
        data: semesterAttemptedCourse
    });
    lineChartObject("CourseProgressView", semester, chartObjects);
    function stackedChart(ctx, labelName, datasetlist, isTrue) {
        let chart = new Chart(ctx, {
            type: 'bar',
            data: {
                labels: labelName, // responsible for how many bars are gonna show on the chart
                // create 12 datasets, since we have 12 items
                // data[0] = labels[0] (data for first bar - 'Standing costs') | data[1] = labels[1] (data for second bar - 'Running costs')
                // put 0, if there is no data for the particular bar
                datasets: datasetlist
            },
            options: {
                responsive: false,
                legend: {
                    position: 'right' // place legend on the right side of chart
                },
                scales: {
                    xAxes: [{
                        stacked: isTrue // this should be set to make the bars stacked
                    }],
                    yAxes: [{
                        stacked: isTrue,
                        ticks:{
                            beginAtZero: true
                        }// this also..
                    }]
                }
            }
        });
    }
</script>
</body>

</html>