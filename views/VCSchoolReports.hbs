<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <title> SPM Independent University,Dhaka  </title>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/Chart.js/2.6.0/Chart.min.js"></script>
    <link rel="stylesheet" href = "/VCDataEntry.css">
    <link rel="stylesheet" href = "/cardstyle.css">


    <link rel="stylesheet" href = "/VCSchoolReports.css">
    <link rel="stylesheet" href =  "https://maxst.icons8.com/vue-static/landings/line-awesome/line-awesome/1.3.0/css/line-awesome.min.css">

</head>

<body>
<input type="checkbox" id="nav-toggle">
<div class="sidebar">
    <div class="sidebar-brand">
        <h2> <span class="lab la-accusoft"> </span> <span> SPM</span></h2>
        <p>

        </p>
    </div>
    <div class="sidebar-menu">
        <ul>
            <li>
                <a href="/VC"><span class="las la-igloo"></span>
                    <span>Student Performance Monitor</span></a>
            </li>
            <li>
                <a href="/VCMyCourses"><span  class="las la-school"></span>
                    <span> My Courses</span></a>
            </li>
            <li>
                <a href="/VCDataEntry"><span  class="las la-database"></span>
                    <span> Data Entry</span></a>
            </li>
            <li>
                <a href="/VCDepartmentReports"><span class="las la-clipboard-list"></span>
                    <span> Department Reports</span></a>
            </li>
            <li>
                <a href="/VCProgramReports"><span class="las la-clipboard-list"></span>
                    <span> Program Reports</span></a>
            </li>
            <li>
                <a href="/VCInstructorReports"><span class="las la-chalkboard-teacher"></span>
                    <span> Instructor Reports</span></a>
            </li>

            <li>
                <a href="/VCSchoolReports" class="active"><span class="las la-chalkboard-teacher"></span>
                    <span> School Reports</span></a>
            </li>
            <li>
                <a href="/VCDownloads"><span class="las la-download"></span>
                    <span> Downloads</span></a>
            </li>
            <li>
                <a href="/VCMyAccount"><span class="las la-user"></span>
                    <span> My Account </span></a>
            </li>
            <li>
                <a href="/login"><span class="las la-sign-out-alt"></span>
                    <span> Sign-Out</span></a>
            </li>
        </ul>
    </div>
</div>
<div class="main-content">
    <header>
        <h2>
            <label for="nav-toggle">
                <span class="las la-bars"></span>
            </label>
            Dashboard
        </h2>
        <div class="user-wrapper">
            <a href="https://ibb.co/ckB79jy"><img src="{{FacultyProfile}}" alt="1505967226-5-Mahady-Hasan"  width="30px" height="30px"></a>
            <div>
                <h4>{{F_fname}} {{F_lName}} </h4>
                <small> {{FacultyID}} </small>
                <small> VC, {{DepartmentID}}</small>
            </div>
        </div>
    </header>

    <main>
        <h2>School of Engineering, Technology & Science (SETS) Progress</h2>

        <div class="chart customcard">
            <canvas id="CourseProgressView" width="800" height="500"></canvas>
        </div>
        <h2>SETS School Progress View </h2>


        <div  class="chart customcard">
            <canvas id="CSEProgressView" width="800" height="500"></canvas>
        </div>
<!--        <h2>EEE Department Progress View </h2>-->


<!--        <div style="width: 1000px; height: 700px;display: inline-block;" class="chart">-->
<!--            <canvas id="CSCProgressView" width="800" height="500"></canvas>-->
<!--        </div>-->
<!--        <h2>PHY Department Progress View </h2>-->


<!--        <div style="width: 1000px; height: 700px;display: inline-block;" class="chart">-->
<!--            <canvas id="CENProgressView" width="800" height="500"></canvas>-->
<!--        </div>-->

<!--        <div style="width: 1000px; height: 500px;display: inline-block;" class="chart">-->
<!--            <h2>SETS School Student Performance</h2>-->
<!--            <canvas id="CSEWiseCGPA" width="1000" height="500"></canvas>-->
<!--        </div>-->
<!--        <div style="width: 100px; height: 150px;display: inline-block;" class="chart"></div>-->
<!--        <div style="width: 1000px; height: 500px;display: inline-block;" class="chart">-->
<!--            <h2>EEE Department Student Performance</h2>-->

<!--            <canvas id="CSCWiseCGPA" width="1000" height="500"></canvas>-->
<!--        </div>-->
<!--        <div style="width: 100px; height: 150px;display: inline-block;" class="chart"></div>-->

<!--        <div style="width: 1000px; height: 500px;display: inline-block;" class="chart">-->
<!--            <h2>PHY Department Student Performance</h2>-->
<!--            <canvas id="CENWiseCGPA" width="1000" height="500"></canvas>-->
<!--        </div>-->




<!--        <div style="width: 2000px; height: 500px;display: inline-block;" class="chart">-->
<!--            <h2>Student Report Of CSE401</h2>-->
<!--            <canvas id="DBMSProgressView" width="2000" height="500"></canvas>-->
<!--        </div>-->
<!--        <div style="width: 1500px; height: 500px;display: inline-block;" class="chart">-->
<!--            <canvas id="FacultyProgressView" width="1500" height="500"></canvas>-->
<!--        </div>-->

    </main>

</div>
<script>

    let semester1 = [ 'Spring',  'Summer',  'Autumn', ];
    let semesterActual = [3, 6, 6];
    let semesterAttempted = [4, 7, 8];
    chartObjects = [{
        label: 'Actual',
        backgroundColor: '#E9F0FE',
        borderColor: '#094480',
        data: semesterActual
    }, {
        label: 'Expected',
        backgroundColor: '#FEE9F3',
        borderColor: '#962323',
        data: semesterAttempted
    }];
    lineChartObject("CSEProgressView", semester1, chartObjects);
    lineChartObject("CSCProgressView", semester1, chartObjects);
    lineChartObject("CENProgressView", semester1, chartObjects);


    let plo1 = ["1820220", "1720694", "1830256", "1711075", "1822302", "1722302", "1820221", "1720691", "1830251", "1711071", "1822301", "1722301", "1820222", "1720692", "1830252", "1711072", "1822322", "1722303", "1820223", "1720693", "1830253", "1711073", "1822303", "1722303", "1820224", "1720644", "1830254", "1711074", "1822304", "1722304"];
    datasetlist = [{
        label: 'Achieved',
        data: [3, 4, 3, 2, 5, 5, 2, 1, 2, 1, 4, 5, 3, 2, 5, 1, 2, 2, 3, 4, 5, 5, 2, 1, 0, 2, 3, 2, 1, 4,],
        backgroundColor: '#962323'
    },
        {
            label: 'Expected',
            data: [5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5,],
            backgroundColor: '#094480'

        }];
    stackedChart("DBMSProgressView", plo1, datasetlist, false);


    let CSEchartName = ['PLO1','PLO2','PLO3','PLO4','PLO5','PLO6','PLO7','PLO8','PLO9','PLO10','PLO11','PLO12','PLO13',];
    let CSEchartLabel = ['70','90','77','75','87','93','54','64','80','50','45','70','60',];
    barChart("CSEWiseCGPA", "Average PLO", CSEchartName, CSEchartLabel)
    let CSCchartName = ['PLO1','PLO2','PLO3','PLO4','PLO5','PLO6','PLO7','PLO8','PLO9','PLO10','PLO11','PLO12','PLO13',];
    let CSCchartLabel = ['70','90','77','75','87','93','54','64','80','50','45','70','60',];
    barChart("CSCWiseCGPA", "Average PLO", CSCchartName, CSCchartLabel)
    let CENchartName = ['PLO1','PLO2','PLO3','PLO4','PLO5','PLO6','PLO7','PLO8','PLO9','PLO10','PLO11','PLO12','PLO13',];
    let CENchartLabel = ['70','90','77','75','87','93','54','64','80','50','45','70','60',];
    barChart("CENWiseCGPA", "Average PLO", CENchartName, CENchartLabel)


    let plo2 = [ 'PLO01',  'PLO02',  'PLO03',  'PLO04',  'PLO05',  'PLO06',  'PLO07',  'PLO08',  'PLO09',  'PLO10',  'PLO11',  'PLO12', ];
    datasetlist = [{
        label: 'Faculty A',
        data: [91, 89, 88, 72, 92, 94, 80, 86, 93, 79, 68, 78],
        backgroundColor: '#094480'

    }, {
        label: 'Faculty B',
        data: [70, 90, 75, 64, 79, 83, 75, 84, 89, 66, 61, 56],
        backgroundColor: '#962323'
    },    {
        label: 'Faculty C',
        data: [50, 70, 45, 55, 49, 77, 64, 54, 79, 76, 51, 49],
        backgroundColor: '#1CBF46'
    }];

    stackedChart("FacultyProgressView", plo2, datasetlist, false );
    let semester=['Spring','Summer', 'Autumn']
    let semesterActualCourse = [[0, 0, 0], [0, 43, 43], [0, 46, 46], [0, 31, 31], [0, 0, 0], [0, 56, 56], [0, 0, 0], [0, 0, 0], [0, 0, 0], [0, 0, 0], [0, 0, 0], [0, 0, 0]];
    let semesterAttemptedCourse = [0, 352, 352];
    let PLO = [ 'PLO1', 'PLO2', 'PLO2', 'PLO4', 'PLO5', 'PLO6', 'PLO7', 'PLO8', 'PLO9', 'PLO10', 'PLO11', 'PLO12', 'PLO13', ];
    // let PLOActual = [50,60,55,71,63,69,74,85,68,76,66,55,73];
    // let PLOAttempted = [88,88,88,88,88,88,88,88,88,88,88,88,88];
    colorpalette = ['purple', 'brown', 'cyan', 'orange', 'yellow', '#094480', 'blue','red', 'green', 'violet', 'magenta', 'lime']

    chartObjects = []
    for (let i = 0; i < 12; i++) {
        let l = `PLO0${i + 1}`
        if (i + 1 >= 10) {
            l = `PLO${i + 1}`
        }

        chartObjects.push({
            label: l,
            backgroundColor: 'white',
            borderColor: colorpalette[i],
            data: semesterActualCourse[i]
        });
    }
    chartObjects.push({
        label: 'Overall',
        backgroundColor: 'white',
        borderColor: 'black',
        data: semesterAttemptedCourse
    });
    lineChartObject("CourseProgressView", semester, chartObjects);
    function barChart(ctx,
                      labelName,
                      labelList,
                      dataList,
                      bdcolor = '#094480',
                      bgcolor = '#33C7FF') {
        //Chart.defaults.global.defaultFontFamily = "Oxygen";
        Chart.defaults.global.defaultFontColor = "black";

        var chart = new Chart(ctx, {
            // The type of chart we want to create
            type: 'bar',

            // The data for our dataset
            data: {
                labels: labelList,
                datasets: [{
                    label: labelName,
                    backgroundColor: bgcolor,
                    borderColor: bdcolor,
                    data: dataList
                }]
            },

            // Configuration options go here
            options: {
                scales: {
                    yAxes: [{
                        ticks: {
                            beginAtZero: true
                        }
                    }]
                }
            }
        });
    }


    function lineChartObject(ctx,
                             labelList,
                             chartObjects) {
        Chart.defaults.global.defaultFontFamily = "Oxygen";
        Chart.defaults.global.defaultFontColor = "black";

        let chart = new Chart(ctx, {
            // The type of chart we want to create
            type: 'line',

            // The data for our dataset
            data: {
                labels: labelList,
                datasets: chartObjects
            },

            // Configuration options go here
            options: {
                scales: {
                    yAxes: [{
                        ticks: {
                            beginAtZero: true
                        }
                    }]
                }
            }
        });
    }


    function stackedChart(ctx, labelName, datasetlist, isTrue) {

        let chart = new Chart(ctx, {
            type: 'bar',
            data: {
                labels: labelName, // responsible for how many bars are gonna show on the chart
                // create 12 datasets, since we have 12 items
                // data[0] = labels[0] (data for first bar - 'Standing costs') | data[1] = labels[1] (data for second bar - 'Running costs')
                // put 0, if there is no data for the particular bar
                datasets: datasetlist
            },
            options: {
                responsive: false,
                legend: {
                    position: 'right' // place legend on the right side of chart
                },
                scales: {
                    xAxes: [{
                        stacked: isTrue // this should be set to make the bars stacked
                    }],
                    yAxes: [{
                        stacked: isTrue // this also..
                    }]
                }
            }
        });
    }
</script>

</body>

</html>
